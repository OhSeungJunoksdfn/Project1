<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.cocktail_member-mapper">
 <select id="memberIdcheck" resultType="int" parameterType="string">
   SELECT COUNT(*) FROM cocktail_member
    WHERE id=#{id}
 </select>
 <!-- 
    ID             NOT NULL VARCHAR2(20)  
	PWD            NOT NULL VARCHAR2(30)  
	NAME           NOT NULL VARCHAR2(51)  
	SEX            NOT NULL CHAR(6)       
	EMAIL                   VARCHAR2(100) 
	BIRTHDAY       NOT NULL VARCHAR2(10)  
	POST           NOT NULL VARCHAR2(10)  
	ADDRESS        NOT NULL VARCHAR2(100) 
	ADDRESS_DETAIL          VARCHAR2(100) 
	REGDATE                 DATE          
	COMENT                  CLOB          
	ADMIN                   VARCHAR2(1)   
	LOGIN                   VARCHAR2(1)   
	PHONE                   VARCHAR2(13)  
	AVATAR                  VARCHAR2(100) 
	DELETEDATE              DATE  
  -->
   <insert id="memberInsert" parameterType="CocktailMemberVO">
    INSERT INTO cocktail_member VALUES(
      #{id},#{pwd},#{name},#{sex},#{email},#{birthday},
      #{post},#{address},#{address_detail},SYSDATE,
      #{coment},'n','y',#{phone},#{avatar},null
    )
   </insert>
  <!-- 로그인 -->
  <select id="memberIdCheckCount" resultType="int" parameterType="string">
    SELECT COUNT(*) FROM cocktail_member
    WHERE id=#{id}
    AND login='y'
  </select>
  <!-- 회원정보 -->
  <select id="memberUpdateData" resultType="CocktailMemberVO" parameterType="string">
   SELECT id,name,sex,email,birthday,post,address,address_detail,coment,phone,avatar
   FROM cocktail_member
   WHERE id=#{id}
  </select>
  <!-- 회원수정 -->
  <select id="memberGetPassword" resultType="CocktailMemberVO" parameterType="string">
   SELECT id,pwd,name,sex,email,admin
   FROM cocktail_member
   WHERE id=#{id, jdbcType=VARCHAR}
  </select>
  
  <select id="memberGetPassword1" resultType="string" parameterType="string">
   SELECT pwd FROM cocktail_member
   WHERE id = #{id, jdbcType=VARCHAR}
  </select>
  
  <update id="memberUpdate" parameterType="CocktailMemberVO">
  	UPDATE cocktail_member SET
  	name=#{name},sex=#{sex},email=#{email},birthday=#{birthday},post=#{post},
  	address=#{address},address_detail=#{address_detail},regdate=SYSDATE,
  	coment=#{coment},phone=#{phone},avatar=#{avatar}
  	WHERE id=#{id}
  </update>
  <!-- 아이디 찾기 -->
  <select id="memberIdFindData" resultType="String" parameterType="CocktailMemberVO">
   SELECT RPAD(SUBSTR(id,1,2),LENGTH(id),'*') FROM cocktail_member
   WHERE name=#{name} AND email=#{email}
  </select>
  <select id="memberGetEmailData" resultType="string" parameterType="string">
    SELECT COUNT(*) FROM cocktail_member
    WHERE email=#{email}
  </select>
  <select id="memberIdFindCount" resultType="int" parameterType="CocktailMemberVO">
   SELECT COUNT(*) FROM cocktail_member
   WHERE name=#{name} AND email=#{email}
  </select>
  <select id="memberInfoData" resultType="CocktailMemberVO" parameterType="string">
    SELECT * FROM cocktail_member
    WHERE id=#{id}
  </select>
  <!-- 비밀번호 찾기 -->
  <select id="memberPwdFindCount" resultType="int" parameterType="string">
   SELECT COUNT(*) FROM cocktail_member
   WHERE id=#{id}
  </select>
  <select id="memberPwdFindData" resultType="String" parameterType="string">
   SELECT pwd FROM cocktail_member
   WHERE id=#{id}
  </select>
  <select id="pwdCheckData" resultType="int" parameterType="hashmap">
   SELECT COUNT(*) FROM cocktail_member
   WHERE id=#{id} 
   AND pwd=#{pwd}
  </select>
  <update id="pwdChange" parameterType="hashmap">
   UPDATE cocktail_member SET
   pwd=#{pwd}
   WHERE id=#{id}
  </update>
 <!--회원탈퇴-->
  <select id="memberGetPassword2" resultType="string" parameterType="string">
   SELECT pwd FROM cocktail_member
   WHERE id = #{id, jdbcType=VARCHAR}
  </select>
 
  <update id="memberSecession" parameterType="string">
  	UPDATE cocktail_member
  	SET login='n',, deletedate=SYSDATE
  	WHERE id=#{id}
  	AND pwd=#{pwd}
  	AND login = 'y' <!-- 탈퇴처리 로그 불가-->
  </update>
  <!-- 회원삭제 -->
  <delete id="deleteOldSecessionMembers">
    DELETE FROM cocktail_member
    WHERE login = 'n'
    AND deletedate &lt;= ADD_MONTHS(SYSDATE, -3)
  </delete>
  <delete id="memberDelete" parameterType="CocktailMemberVO">
    DELETE FROM cocktail_member
    WHERE login = 'n'
    AND id = #{id}
  </delete>

</mapper>